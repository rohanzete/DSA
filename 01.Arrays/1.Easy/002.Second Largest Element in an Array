/*

GFG:-Second Largest Element in an Array
LINK:-https://www.geeksforgeeks.org/problems/second-largest3735/1
PAGE NO:2

_____________________________________________________________________________________________________________________________________________________________________________________________

PROBLEM:-Given an array of positive integers arr[], return the second largest element from the array. 
If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
Constraints:
2 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 105



_____________________________________________________________________________________________________________________________________________________________________________________________

*/


//CODE:-
class Solution {
    public int getSecondLargest(int[] arr) {
    int largest=Integer.MIN_VALUE;
    int second=Integer.MIN_VALUE;
    for(int i=0;i<arr.length;i++){
        if(arr[i]>largest){
            second=largest;
            largest=arr[i];
        }else if(arr[i]>second && arr[i]!=largest){
             second=arr[i];
        }
    }
    if(second==Integer.MIN_VALUE){
        return -1;
    }else{
        return second;
    }
        
    }
}

